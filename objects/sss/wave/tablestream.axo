<objdefs appVersion="1.0.12">
   <obj.normal id="tablestream" uuid="cebec4e4-6235-4296-b65b-f46b88674518">
      <sDescription>streaming playback of a mono .wav file from sdcard (testing)</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <bool32.rising name="load" description="trigger"/>
         <charptr32 name="filename" description="file name"/>
         <int32 name="sample"/>
      </inlets>
      <outlets>
         <bool32 name="ended"/>
      </outlets>
      <displays>
         <bool32 name="load" noLabel="true"/>
         <int32.label name="length"/>
      </displays>
      <params/>
      <attribs>
         <combo name="size">
            <MenuEntries>
               <string>64(1.33ms)</string>
               <string>128 (2.66ms)</string>
               <string>256 (5.33ms)</string>
               <string>512 (10.66ms)</string>
               <string>1024 (21.33ms)</string>
               <string>2048 (42.66ms)</string>
               <string>4096 (85.33ms)</string>
               <string>8192 (170ms)</string>
               <string>16384 (341ms)</string>
               <string>32768 (682ms)</string>
               <string>65536 (1.36s)</string>
               <string>131072 (2.73s)</string>
               <string>262144 (5.46s)</string>
               <string>524288 (10.9s)</string>
               <string>1048576 (21.8s)</string>
               <string>2097152 (43.7s)</string>
            </MenuEntries>
            <CEntries>
               <string>6</string>
               <string>7</string>
               <string>8</string>
               <string>9</string>
               <string>10</string>
               <string>11</string>
               <string>12</string>
               <string>13</string>
               <string>14</string>
               <string>15</string>
               <string>16</string>
               <string>17</string>
               <string>18</string>
               <string>19</string>
               <string>20</string>
               <string>21</string>
            </CEntries>
         </combo>
         <combo name="samples">
            <MenuEntries>
               <string>2</string>
               <string>4</string>
               <string>8</string>
               <string>16</string>
               <string>32</string>
               <string>64</string>
               <string>128</string>
               <string>256</string>
            </MenuEntries>
            <CEntries>
               <string>1</string>
               <string>2</string>
               <string>3</string>
               <string>4</string>
               <string>5</string>
               <string>6</string>
               <string>7</string>
               <string>8</string>
            </CEntries>
         </combo>
         <combo name="init">
            <MenuEntries>
               <string>rst</string>
               <string>keep</string>
            </MenuEntries>
            <CEntries>
               <string>1</string>
               <string>0</string>
            </CEntries>
         </combo>
         <combo name="fade">
            <MenuEntries>
               <string>off</string>
               <string>on</string>
            </MenuEntries>
            <CEntries>
               <string>0</string>
               <string>1</string>
            </CEntries>
         </combo>
      </attribs>
      <includes>
         <include>./streamer.h</include>
         <include>chibios/ext/fatfs/src/ff.h</include>
      </includes>
      <code.declaration><![CDATA[WORKING_AREA(waThreadSD, 800);
   sdReadFilePingpong *stream;
   int starttrig;
   int stoptrig;
   int cnt;
   bool loop;
   bool end;
   int32_t size;
static const uint32_t LENGTHPOW = (attr_size);
static const uint32_t LENGTH = (1<<attr_size);
static const uint32_t LENGTHMASK = ((1<<attr_size)-1);
static const uint32_t BITS = 16;
static const uint32_t GAIN = 12;
int16_t *array;
static const int32_t SAMPLES=1<<attr_samples;
int32_t sample;
int sm;
bool em,load;
int32_t *END;]]></code.declaration>
      <code.init><![CDATA[static sdReadFilePingpong s[attr_poly] SDMMC_MEM_FW;
// unmap from aliased memory for DMA
stream = &s[parent->polyIndex];
stream->pingpong = CLOSED;
stream->doSeek = 0;
stream->offset = -1;
starttrig = 0;
stoptrig = 0;
cnt=LENGTH;
stream->pThreadSD = chThdCreateStatic(waThreadSD, sizeof(waThreadSD),
                    HIGHPRIO, ThreadSD, (void *)stream);

static int16_t _array[LENGTH*SAMPLES] __attribute__ ((section (".sdram")));
array = &_array[0];
static int32_t _END[SAMPLES] __attribute__ ((section (".sdram")));
END = &_END[0];
{
  int i;
  if(attr_init>0){
  for(i=0;i<(LENGTH*SAMPLES);i++) array[i]=0;
}
}
em=0;]]></code.init>
      <code.dispose><![CDATA[sdStopStreamer(stream);]]></code.dispose>
      <code.krate><![CDATA[int32_t i;
bool start=inlet_load;
sample=inlet_sample;
sm=sample=sample&(SAMPLES-1);
sample=sample*LENGTH;
     if ((start>0) && !starttrig) {



        sdOpenStream(stream,inlet_filename);
        sdSeekStream(stream,0);
        starttrig=1;
        cnt=0;
     } else if ((!(start>0)) && starttrig) {        starttrig=0;
     }

     int16_t *p = 0;
   //  int16_t *q = 0;
     p=sdReadStream(stream);
     SCB_InvalidateICache();
     SCB_CleanInvalidateDCache();
     if (p) {
     	em=0;
     	load=1;
        for(i=0;i<BUFSIZE;i++){
        	if(cnt<LENGTH){
           array[cnt+sample] = (*(p++));
           cnt+=1;
        	}
        	//else{em=0;}
        }

     }
     else {
     	if(!em)
     	{
     		if(attr_fade>0){
     		END[sm]=cnt;
     		disp_length=cnt;
     		for(int i=0;i<16;i++){
     			array[i]=___SMMUL(array[i],i<<27)<<1;
     		}
     		for(int i=0;i<129;i++)
     		{
     			int k=__USAT(i-129+cnt,LENGTHPOW)+sample;
     			array[k]=___SMMUL(array[k],(128-i)<<25)<<1;
     		}
     		for(int i=cnt;i<LENGTH;i++)
     		{
     			array[i+sample]=0;
     		}
     		}
     	em=1;
     	}
     	load=0;
     	}
     disp_load=load;

     outlet_ended=!load;]]></code.krate>
   </obj.normal>
</objdefs>