<objdefs appVersion="1.0.11">
   <obj.normal id="multisource" uuid="ea54ec70-e9a6-4260-8160-97f82c7a62ea">
      <sDescription>generic modulation source
updates automatically when input changes</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>

<ModulationSources>

<string>M1</string>

<string>M2</string>

<string>M3</string>

<string>M4</string>

<string>M5</string>

<string>M6</string>

<string>M7</string>

<string>M8</string>

<string>M9</string>

<string>M10</string>

<string>M11</string>

<string>M12</string>

<string>M13</string>

<string>M14</string>

<string>M15</string>

<string>M16</string>

</ModulationSources>
      <inlets>
         <frac32 name="1" description="value"/>
         <frac32 name="2"/>
         <frac32 name="3"/>
         <frac32 name="4"/>
         <frac32 name="5"/>
         <frac32 name="6"/>
         <frac32 name="7"/>
         <frac32 name="8"/>
         <frac32 name="9"/>
         <frac32 name="10"/>
         <frac32 name="11"/>
         <frac32 name="12"/>
         <frac32 name="13"/>
         <frac32 name="14"/>
         <frac32 name="15"/>
         <frac32 name="16"/>
      </inlets>
      <outlets/>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[int32_t prev01;
int32_t prev02;
int32_t prev03;
int32_t prev04;
int32_t prev05;
int32_t prev06;
int32_t prev07;
int32_t prev08;
int32_t prev09;
int32_t prev10;
int32_t prev11;
int32_t prev12;
int32_t prev13;
int32_t prev14;
int32_t prev15;
int32_t prev16;]]></code.declaration>
      <code.krate><![CDATA[int32_t temp=inlet_1;
if(!(prev01==temp))
{
  ModulationSourceChange(
    &parent->GetModulationTable()[parent->MODULATOR_attr_name_M1*NMODULATIONTARGETS],
    NMODULATIONTARGETS,
    &parent->PExch[0],
    &parent->PExModulationPrevVal[parent->polyIndex][parent->MODULATOR_attr_name_M1],
    temp);
}
prev01=temp;
temp=inlet_2;
if(!(prev02==temp))
{
  ModulationSourceChange(
    &parent->GetModulationTable()[parent->MODULATOR_attr_name_M2*NMODULATIONTARGETS],
    NMODULATIONTARGETS,
    &parent->PExch[0],
    &parent->PExModulationPrevVal[parent->polyIndex][parent->MODULATOR_attr_name_M2],
    temp);
}
prev02=temp;
temp=inlet_3;
if(!(prev03==temp))
{
  ModulationSourceChange(
    &parent->GetModulationTable()[parent->MODULATOR_attr_name_M3*NMODULATIONTARGETS],
    NMODULATIONTARGETS,
    &parent->PExch[0],
    &parent->PExModulationPrevVal[parent->polyIndex][parent->MODULATOR_attr_name_M3],
    temp);
}
prev03=temp;
temp=inlet_4;
if(!(prev04==temp))
{
  ModulationSourceChange(
    &parent->GetModulationTable()[parent->MODULATOR_attr_name_M4*NMODULATIONTARGETS],
    NMODULATIONTARGETS,
    &parent->PExch[0],
    &parent->PExModulationPrevVal[parent->polyIndex][parent->MODULATOR_attr_name_M4],
    temp);
}
prev04=temp;



temp=inlet_5;
if(!(prev05==temp))
{
  ModulationSourceChange(
    &parent->GetModulationTable()[parent->MODULATOR_attr_name_M5*NMODULATIONTARGETS],
    NMODULATIONTARGETS,
    &parent->PExch[0],
    &parent->PExModulationPrevVal[parent->polyIndex][parent->MODULATOR_attr_name_M5],
    temp);
}
prev05=temp;
temp=inlet_6;
if(!(prev06==temp))
{
  ModulationSourceChange(
    &parent->GetModulationTable()[parent->MODULATOR_attr_name_M6*NMODULATIONTARGETS],
    NMODULATIONTARGETS,
    &parent->PExch[0],
    &parent->PExModulationPrevVal[parent->polyIndex][parent->MODULATOR_attr_name_M6],
    temp);
}
prev06=temp;
temp=inlet_7;
if(!(prev07==temp))
{
  ModulationSourceChange(
    &parent->GetModulationTable()[parent->MODULATOR_attr_name_M7*NMODULATIONTARGETS],
    NMODULATIONTARGETS,
    &parent->PExch[0],
    &parent->PExModulationPrevVal[parent->polyIndex][parent->MODULATOR_attr_name_M7],
    temp);
}
prev07=temp;
temp=inlet_8;
if(!(prev08==temp))
{
  ModulationSourceChange(
    &parent->GetModulationTable()[parent->MODULATOR_attr_name_M8*NMODULATIONTARGETS],
    NMODULATIONTARGETS,
    &parent->PExch[0],
    &parent->PExModulationPrevVal[parent->polyIndex][parent->MODULATOR_attr_name_M8],
    temp);
}
prev08=temp;



temp=inlet_9;
if(!(prev09==temp))
{
  ModulationSourceChange(
    &parent->GetModulationTable()[parent->MODULATOR_attr_name_M9*NMODULATIONTARGETS],
    NMODULATIONTARGETS,
    &parent->PExch[0],
    &parent->PExModulationPrevVal[parent->polyIndex][parent->MODULATOR_attr_name_M9],
    temp);
}
prev09=temp;
temp=inlet_10;
if(!(prev10==temp))
{
  ModulationSourceChange(
    &parent->GetModulationTable()[parent->MODULATOR_attr_name_M10*NMODULATIONTARGETS],
    NMODULATIONTARGETS,
    &parent->PExch[0],
    &parent->PExModulationPrevVal[parent->polyIndex][parent->MODULATOR_attr_name_M10],
    temp);
}
prev10=temp;
temp=inlet_11;
if(!(prev11==temp))
{
  ModulationSourceChange(
    &parent->GetModulationTable()[parent->MODULATOR_attr_name_M11*NMODULATIONTARGETS],
    NMODULATIONTARGETS,
    &parent->PExch[0],
    &parent->PExModulationPrevVal[parent->polyIndex][parent->MODULATOR_attr_name_M11],
    temp);
}
prev11=temp;
temp=inlet_12;
if(!(prev12==temp))
{
  ModulationSourceChange(
    &parent->GetModulationTable()[parent->MODULATOR_attr_name_M12*NMODULATIONTARGETS],
    NMODULATIONTARGETS,
    &parent->PExch[0],
    &parent->PExModulationPrevVal[parent->polyIndex][parent->MODULATOR_attr_name_M12],
    temp);
}
prev12=temp;



temp=inlet_13;
if(!(prev13==temp))
{
  ModulationSourceChange(
    &parent->GetModulationTable()[parent->MODULATOR_attr_name_M13*NMODULATIONTARGETS],
    NMODULATIONTARGETS,
    &parent->PExch[0],
    &parent->PExModulationPrevVal[parent->polyIndex][parent->MODULATOR_attr_name_M13],
    temp);
}
prev13=temp;
temp=inlet_14;
if(!(prev14==temp))
{
  ModulationSourceChange(
    &parent->GetModulationTable()[parent->MODULATOR_attr_name_M14*NMODULATIONTARGETS],
    NMODULATIONTARGETS,
    &parent->PExch[0],
    &parent->PExModulationPrevVal[parent->polyIndex][parent->MODULATOR_attr_name_M14],
    temp);
}
prev14=temp;
temp=inlet_15;
if(!(prev15==temp))
{
  ModulationSourceChange(
    &parent->GetModulationTable()[parent->MODULATOR_attr_name_M15*NMODULATIONTARGETS],
    NMODULATIONTARGETS,
    &parent->PExch[0],
    &parent->PExModulationPrevVal[parent->polyIndex][parent->MODULATOR_attr_name_M15],
    temp);
}
prev15=temp;
temp=inlet_16;
if(!(prev16==temp))
{
  ModulationSourceChange(
    &parent->GetModulationTable()[parent->MODULATOR_attr_name_M16*NMODULATIONTARGETS],
    NMODULATIONTARGETS,
    &parent->PExch[0],
    &parent->PExModulationPrevVal[parent->polyIndex][parent->MODULATOR_attr_name_M16],
    temp);
}
prev16=temp;]]></code.krate>
   </obj.normal>
</objdefs>