<objdefs appVersion="1.0.10">
   <obj.normal id="ADSRBezMem" uuid="5426747e-a625-47a0-b58a-81e74bcf7941">
      <sDescription>This is the control module for the ADSRbezier module curve controles, so you&apos;ll only need one knob and a selector to control all 9 curve parameters</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>hook.axh</helpPatch>
      <inlets>
         <frac32 name="A1" description="adds to respective value, so no need for external adders."/>
         <frac32 name="A2" description="adds to respective value"/>
         <frac32 name="A3" description="adds to respective value"/>
         <frac32 name="D1" description="adds to respective value"/>
         <frac32 name="D2" description="adds to respective value"/>
         <frac32 name="D3"/>
         <frac32 name="R1"/>
         <frac32 name="R2"/>
         <frac32 name="R3"/>
         <int32 name="sel" description="select parameter to change (0 to 17)"/>
         <frac32.positive name="in" description="input for controlling parameters"/>
         <bool32.rising name="trg" description="Trigger high updates parameter to &quot;in&quot; inlet"/>
      </inlets>
      <outlets>
         <frac32 name="A1"/>
         <frac32 name="A2"/>
         <frac32 name="A3"/>
         <frac32 name="D1"/>
         <frac32 name="D2"/>
         <frac32 name="D3"/>
         <frac32 name="R1"/>
         <frac32 name="R2"/>
         <frac32 name="R3"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map name="A1"/>
         <frac32.s.map name="A2"/>
         <frac32.s.map name="A3"/>
         <frac32.s.map name="D1"/>
         <frac32.s.map name="D2"/>
         <frac32.s.map name="D3"/>
         <frac32.s.map name="R1"/>
         <frac32.s.map name="R2"/>
         <frac32.s.map name="R3"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[
int32_t cache;
int trg;]]></code.declaration>
      <code.krate><![CDATA[   switch(inlet_sel>0?inlet_sel:0){

	case 0:
		if((inlet_trg>0)&&(trg!=1))
		{trg=1;
			ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_A1],inlet_in,0xFFFD);
		}
		else
		{
			if(inlet_trg==0)
			{
			trg=0;
			}
		}
	break;

	case 1:
		if((inlet_trg>0)&&(trg!=1))
		{trg=1;
			ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_A2],inlet_in,0xFFFD);
		}
		else
		{
			if(inlet_trg==0)
			{
			trg=0;
			}
		}
	break;

	case 2:
		if((inlet_trg>0)&&(trg!=1))
		{trg=1;
			ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_A3],inlet_in,0xFFFD);
		}
		else
		{
			if(inlet_trg==0)
			{
			trg=0;
			}
		}
	break;

	case 3:
		if((inlet_trg>0)&&(trg!=1))
		{trg=1;
			ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_D1],inlet_in,0xFFFD);
		}
		else
		{
			if(inlet_trg==0)
			{
			trg=0;
			}
		}
	break;

	case 4:
		if((inlet_trg>0)&&(trg!=1))
		{trg=1;
			ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_D2],inlet_in,0xFFFD);
		}
		else
		{
			if(inlet_trg==0)
			{
			trg=0;
			}
		}
	break;

	case 5:
		if((inlet_trg>0)&&(trg!=1))
		{trg=1;
			ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_D3],inlet_in,0xFFFD);
		}
		else
		{
			if(inlet_trg==0)
			{
			trg=0;
			}
		}
	break;
	case 6:
		if((inlet_trg>0)&&(trg!=1))
		{trg=1;
			ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_R1],inlet_in,0xFFFD);
		}
		else
		{
			if(inlet_trg==0)
			{
			trg=0;
			}
		}
	break;

	case 7:
		if((inlet_trg>0)&&(trg!=1))
		{trg=1;
			ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_R2],inlet_in,0xFFFD);
		}
		else
		{
			if(inlet_trg==0)
			{
			trg=0;
			}
		}
	break;

	case 8:
		if((inlet_trg>0)&&(trg!=1))
		{trg=1;
			ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_R3],inlet_in,0xFFFD);
		}
		else
		{
			if(inlet_trg==0)
			{
			trg=0;
			}
		}
	break;

}
outlet_A1=param_A1+inlet_A1;
outlet_A2=param_A2+inlet_A2;
outlet_A3=param_A3+inlet_A3;
outlet_D1=param_D1+inlet_D1;
outlet_D2=param_D2+inlet_D2;
outlet_D3=param_D3+inlet_D3;
outlet_R1=param_R1+inlet_R1;
outlet_R2=param_R2+inlet_R2;
outlet_R3=param_R3+inlet_R3;

]]></code.krate>
   </obj.normal>
</objdefs>