<objdefs appVersion="1.0.12">
   <obj.normal id="basearch" uuid="d03aaece-3894-4e1b-b8f7-05e0b7b9e57a">
      <sDescription>Pattern selector/finder for the &quot;baseq&quot; sequencer.
Select base pattern to base the search on
Select on which channel in the pattern you want to base your search on.
Select how different the newly found pattern may be from your base-pattern.
The controls:
&quot;next&quot; searches for the next pattern that&apos;s similar enough to the base pattern.
&quot;new&quot; copies the currently selected pattern to the base-pattern-value to start it&apos;s next search based on this new pattern.
&quot;rnd&quot; chooses as random pattern as long as it&apos;s high. When low, goes back to the selected pattern.</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>ctrl.axh</helpPatch>
      <inlets>
         <bool32 name="next" description="when it goes high, searches for the next pattern that&apos;s similar to the base pattern"/>
         <bool32 name="new" description="when it goes high, copies the current selected preset number to the base-preset control. The next search will look for sequences similar to this new pattern."/>
         <bool32 name="rnd" description="when this goes high, selects a random preset as long as input is high. When low, the output goes back to following the selected preset."/>
      </inlets>
      <outlets>
         <int32.positive name="out" description="preset selection output"/>
      </outlets>
      <displays/>
      <params>
         <int32 name="pattern" description="sets the base pattern on which the search for the next pattern is based">
            <MinValue i="0"/>
            <MaxValue i="65536"/>
         </int32>
         <bool32.mom name="next" description="when it goes high, searches for the next pattern that&apos;s similar to the base pattern"/>
         <bool32.mom name="new" description="when it goes high, copies the current selected preset number to the base-preset control. The next search will look for sequences similar to this new pattern."/>
         <int32 name="channel" description="sets the channel on which the similarity search is based (kick, basskick,toms,snare,etc)">
            <MinValue i="0"/>
            <MaxValue i="7"/>
         </int32>
         <int32 name="difference" description="sets how similar the new pattern should be to the base pattern. Low values give high similarity">
            <MinValue i="1"/>
            <MaxValue i="16"/>
         </int32>
      </params>
      <attribs>
         <objref name="seq" description="should refer to the &quot;baseq&quot; sequencer module"/>
      </attribs>
      <code.declaration><![CDATA[int patt;
bool nxt;
int i;
int j;
int ofs;
int prv;
bool get=0;
bool nw;
int pos;
bool pv;
int cnt;
bool rnd;
int RND;]]></code.declaration>
      <code.init><![CDATA[patt=0;
ofs=0;
j=0;
get=1;
pv=0;
cnt=0;]]></code.init>
      <code.krate><![CDATA[int chn=param_channel*96;

if((inlet_rnd>0)&&!rnd){
	rnd=1;
	RND=(int32_t)(GenerateRandomNumber()%2913);
}
else if(inlet_rnd<1){rnd=0;}

if(!(param_pattern==prv)){
	ofs=0;
	j=0;
}
bool next=param_next||inlet_next;
bool NEW=param_new||inlet_new;
if((NEW>0)&&!nw){
	ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_pattern],pos,0xFFFD);
	nw=1;
	//get=0;
	ofs=0;
	j=0;

}
else if(NEW<1){nw=0;}
if((next>0)&&!nxt){
	nxt=1;
	get=0;

}
else if(next<1){nxt=0;}




int base=param_pattern;
cnt=2;
while((get==0)&&(cnt>0))
	{
		j+=1;
		j=j>2999?0:j;
		int sel=(j+base);
		sel=sel>2999?sel-2999:sel;
		sel=sel*768;
		int go=param_difference;
		int hi=0;
		for(i=0;i<96;i++)
		{
			if(!((attr_seq.array[base*768+i+chn]>0)==((attr_seq.array[sel+i+chn]>0))))
			{
				go-=1;
			}
			hi+=attr_seq.array[sel+i+chn]>0?1:0;
		}
		if((go>0)&&(hi>0)){get=1;ofs=j;}
		cnt-=1;
	}

pos=param_pattern+ofs;
pos=pos>2999?pos-2999:pos;
outlet_out= inlet_rnd>0?RND:pos;
prv=param_pattern;]]></code.krate>
   </obj.normal>
</objdefs>