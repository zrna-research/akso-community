<objdefs appVersion="1.0.9">
   <obj.normal id="CountMem" uuid="836642a8-c229-475a-a518-8654fd791f1f">
      <sDescription>parameter memory for the range counters</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>hook.axh</helpPatch>
      <inlets>
         <int32 name="sel"/>
         <frac32.positive name="in" description="input"/>
         <bool32.rising name="trg"/>
         <frac32 name="PrS"/>
         <frac32 name="PrJ"/>
         <frac32 name="PrC"/>
         <frac32 name="MiS"/>
         <frac32 name="MiJ"/>
         <frac32 name="MiC"/>
         <frac32 name="PsS"/>
         <frac32 name="PsJ"/>
         <frac32 name="PsC"/>
      </inlets>
      <outlets>
         <frac32 name="PrS"/>
         <frac32 name="PrJ"/>
         <frac32 name="PrC"/>
         <frac32 name="MiS"/>
         <frac32 name="MiJ"/>
         <frac32 name="MiC"/>
         <frac32 name="PsS"/>
         <frac32 name="PsJ"/>
         <frac32 name="PsC"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map name="PreStp"/>
         <frac32.s.map name="PreJmp"/>
         <frac32.s.map name="PreChg"/>
         <frac32.s.map name="MidStp"/>
         <frac32.s.map name="MidJmp"/>
         <frac32.s.map name="MidChg"/>
         <frac32.s.map name="PstStp"/>
         <frac32.s.map name="PstJmp"/>
         <frac32.s.map name="PstChg"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[
int32_t cache;
int trg;]]></code.declaration>
      <code.krate><![CDATA[   switch(inlet_sel>0?inlet_sel:0){

	case 0:
		if((inlet_trg>0)&&(trg!=1))
		{trg=1;
			ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_PreStp],inlet_in,0xFFFD);
		}
		else
		{
			if(inlet_trg==0)
			{
			trg=0;
			}
		}
	break;

	case 1:
		if((inlet_trg>0)&&(trg!=1))
		{trg=1;
			ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_PreJmp],inlet_in,0xFFFD);
		}
		else
		{
			if(inlet_trg==0)
			{
			trg=0;
			}
		}
	break;

	case 2:
		if((inlet_trg>0)&&(trg!=1))
		{trg=1;
			ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_PreChg],inlet_in,0xFFFD);
		}
		else
		{
			if(inlet_trg==0)
			{
			trg=0;
			}
		}
	break;

	case 3:
		if((inlet_trg>0)&&(trg!=1))
		{trg=1;
			ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_MidStp],inlet_in,0xFFFD);
		}
		else
		{
			if(inlet_trg==0)
			{
			trg=0;
			}
		}
	break;

	case 4:
		if((inlet_trg>0)&&(trg!=1))
		{trg=1;
			ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_MidJmp],inlet_in,0xFFFD);
		}
		else
		{
			if(inlet_trg==0)
			{
			trg=0;
			}
		}
	break;

	case 5:
		if((inlet_trg>0)&&(trg!=1))
		{trg=1;
			ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_MidChg],inlet_in,0xFFFD);
		}
		else
		{
			if(inlet_trg==0)
			{
			trg=0;
			}
		}
	break;

	case 6:
		if((inlet_trg>0)&&(trg!=1))
		{trg=1;
			ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_PstStp],inlet_in,0xFFFD);
		}
		else
		{
			if(inlet_trg==0)
			{
			trg=0;
			}
		}
	break;

	case 7:
		if((inlet_trg>0)&&(trg!=1))
		{trg=1;
			ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_PstJmp],inlet_in,0xFFFD);
		}
		else
		{
			if(inlet_trg==0)
			{
			trg=0;
			}
		}
	break;

	case 8:
		if((inlet_trg>0)&&(trg!=1))
		{trg=1;
			ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_PstChg],inlet_in,0xFFFD);
		}
		else
		{
			if(inlet_trg==0)
			{
			trg=0;
			}
		}
	break;





}

outlet_PrS=param_PreStp;
outlet_PrJ=param_PreJmp;
outlet_PrC=param_PreChg;
outlet_MiS=param_MidStp;
outlet_MiJ=param_MidJmp;
outlet_MiC=param_MidChg;
outlet_PsS=param_PstStp;
outlet_PsJ=param_PstJmp;
outlet_PsC=param_PstChg;]]></code.krate>
   </obj.normal>
</objdefs>