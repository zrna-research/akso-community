<objdefs appVersion="1.0.11">
   <obj.normal id="WeightedFolSet" uuid="6198986f-2161-4a97-a041-b932d125d9de">
      <sDescription>module for manually setting the chance that certain notes follow up on certain previous notes.

&quot;Note&quot; sets the &quot;previous&quot; note.
The small selectors set the chance of each note (1 octave)
&quot;Octave&quot; sets the octave offset for the chance selectors (so you can set the chance for follow-up notes over 4 octaves).</sDescription>
      <author>Remco van der most</author>
      <license>BSD</license>
      <rotatedParams>true</rotatedParams>
      <inlets/>
      <outlets/>
      <displays/>
      <params>
         <int32 name="note">
            <MinValue i="0"/>
            <MaxValue i="47"/>
         </int32>
         <int32.mini name="i0" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="99"/>
         </int32.mini>
         <int32.mini name="i1" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="99"/>
         </int32.mini>
         <int32.mini name="i2" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="99"/>
         </int32.mini>
         <int32.mini name="i3" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="99"/>
         </int32.mini>
         <int32.mini name="i4" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="99"/>
         </int32.mini>
         <int32.mini name="i5" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="99"/>
         </int32.mini>
         <int32.mini name="i6" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="99"/>
         </int32.mini>
         <int32.mini name="i7" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="99"/>
         </int32.mini>
         <int32.mini name="i8" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="99"/>
         </int32.mini>
         <int32.mini name="i9" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="99"/>
         </int32.mini>
         <int32.mini name="i10" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="99"/>
         </int32.mini>
         <int32.mini name="i11" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="99"/>
         </int32.mini>
         <int32 name="octave">
            <MinValue i="0"/>
            <MaxValue i="3"/>
         </int32>
      </params>
      <attribs>
         <objref name="core"/>
      </attribs>
      <code.declaration><![CDATA[int prev;
int i;]]></code.declaration>
      <code.krate><![CDATA[int NOTE=param_note*48+param_octave*12;
if(!(prev==param_note+attr_core.load+param_octave))
{
	ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_i0],attr_core.array[NOTE],0xFFFD);
	for(i=1;i<12;i++)
	{
	ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_i0+i],attr_core.array[i+NOTE]-attr_core.array[i-1+NOTE],0xFFFD);
	}
}


attr_core.array[0+NOTE]=param_i0;
attr_core.array[1+NOTE]=param_i1+attr_core.array[0+NOTE];
attr_core.array[2+NOTE]=param_i2+attr_core.array[1+NOTE];
attr_core.array[3+NOTE]=param_i3+attr_core.array[2+NOTE];
attr_core.array[4+NOTE]=param_i4+attr_core.array[3+NOTE];
attr_core.array[5+NOTE]=param_i5+attr_core.array[4+NOTE];
attr_core.array[6+NOTE]=param_i6+attr_core.array[5+NOTE];
attr_core.array[7+NOTE]=param_i7+attr_core.array[6+NOTE];
attr_core.array[8+NOTE]=param_i8+attr_core.array[7+NOTE];
attr_core.array[9+NOTE]=param_i9+attr_core.array[8+NOTE];
attr_core.array[10+NOTE]=param_i10+attr_core.array[9+NOTE];
attr_core.array[11+NOTE]=param_i11+attr_core.array[10+NOTE];
prev=param_note+attr_core.load+param_octave;]]></code.krate>
   </obj.normal>
</objdefs>