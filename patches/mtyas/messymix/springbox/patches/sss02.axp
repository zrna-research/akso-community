<patch-1.0 appVersion="1.0.12">
   <obj type="ctrl/toggle" uuid="42b8134fa729d54bfc8d62d6ef3fa99498c1de99" name="toggle_1" x="0" y="0">
      <params>
         <bool32.tgl name="b" value="1"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="cf8b0d26-f09e-41f5-bd7e-2e0c29ef5bd0" name="object_2" x="70" y="0">
      <params>
         <int32 name="BPMbase" value="165"/>
         <bool32.tgl name="link" value="1"/>
         <int32 name="BPMctrl" value="165"/>
         <int32 name="measureDenom" value="4"/>
         <int32 name="sync" value="4"/>
         <int32 name="measureSwing" value="4"/>
         <frac32.s.map name="swing" value="8.0"/>
         <frac32.s.map name="deviate" value="-2.0"/>
         <frac32.s.map name="mash" value="7.0"/>
         <int32 name="phsMul" value="6"/>
         <int32 name="phsDiv" value="32"/>
         <bool32.mom name="reset" value="0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="cf8b0d26-f09e-41f5-bd7e-2e0c29ef5bd0">
         <inlets>
            <int32 name="BPMbase"/>
            <int32 name="BPMctrl"/>
            <bool32 name="reset"/>
         </inlets>
         <outlets>
            <int32 name="BPMctrl"/>
            <frac32.bipolar name="pitchbend"/>
            <frac32 name="pitchbase"/>
            <bool32 name="trigger"/>
            <int32 name="count"/>
            <frac32 name="phase"/>
            <bool32 name="rst"/>
         </outlets>
         <displays>
            <bool32 name="d1"/>
         </displays>
         <params>
            <int32 name="BPMbase">
               <MinValue i="0"/>
               <MaxValue i="999"/>
            </int32>
            <bool32.tgl name="link"/>
            <int32 name="BPMctrl">
               <MinValue i="0"/>
               <MaxValue i="999"/>
            </int32>
            <int32 name="measureDenom">
               <MinValue i="1"/>
               <MaxValue i="64"/>
            </int32>
            <int32 name="sync">
               <MinValue i="1"/>
               <MaxValue i="16"/>
            </int32>
            <int32 name="measureSwing">
               <MinValue i="1"/>
               <MaxValue i="64"/>
            </int32>
            <frac32.s.map name="swing"/>
            <frac32.s.map name="deviate"/>
            <frac32.s.map name="mash"/>
            <int32 name="phsMul">
               <MinValue i="1"/>
               <MaxValue i="64"/>
            </int32>
            <int32 name="phsDiv">
               <MinValue i="1"/>
               <MaxValue i="64"/>
            </int32>
            <bool32.mom name="reset"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[uint32_t phs;
int32_t PHS;
int cnt;
int count;
bool trg;
int32_t Phase;
bool r;
int rate1=3;
int rate2=4;
uint32_t frq;
int32_t swing;
int32_t Swing;
int32_t out;
int32_t vi27=(1<<27)-1;
int snc;
int32_t LOG(int32_t in){
	Float_t f;
f.f = in;
int32_t r1 = ((f.parts.exponent&0x7F)-18) << 24;
int32_t r3 = logt[f.parts.mantissa>>15]<<10;
out = r1 + r3;

}

int32_t FTOM(int32_t freq){
	int32_t ptch;
	int32_t mid;
MTOFEXTENDED(0,mid);
LOG(mid);
mid=out;

int32_t to;
LOG(freq);
to=out;
return ptch=(to-mid>>1)*3;
};]]></code.declaration>
         <code.init><![CDATA[cnt=0;
swing=0;
snc=0;
count=0;
Phase=0;]]></code.init>
         <code.krate><![CDATA[//int32_t pitch;
int BPMbase=param_BPMbase+inlet_BPMbase;
int BPMctrl=param_BPMctrl+inlet_BPMctrl;
outlet_rst=0;
int32_t freq;
if((BPMbase>0)&&(BPMctrl>0)){
MTOFEXTENDED(0,freq)
float32_t ratio;
ratio=(float32_t)BPMctrl/BPMbase;
if(param_link<1){
freq=freq*ratio;
}
else{ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_BPMbase],param_BPMctrl,0xFFFD);BPMbase=BPMctrl;}
	bool reset=param_reset||inlet_reset;
      if (reset && r) {
      outlet_rst=1;
         Phase = 0;
         snc=0;
         cnt=0;
         swing=0;
         count=0;
         r = 0;
         PHS=0;
      } else {
         if (!reset) r = 1;
         frq=(uint32_t)(1<<30)/(22500/BPMctrl);
         Phase += frq>>2;
         PHS=Phase*param_measureDenom;
      }
if((uint32_t)Phase<phs){
	count+=1;
	count=count>=param_phsDiv?0:count;
		snc+=1;
		if(snc>=param_sync){
			cnt=-1;
			snc=0;
		}
}


if((PHS>swing)&&!trg){
	trg=1;
	cnt=(cnt+1);
	cnt=cnt>=param_measureSwing?0:cnt;
	int32_t deviate=((int32_t)(param_deviate*0.999)<<4);
	int32_t mash=((int32_t)(param_mash*0.999)<<4);
	bool sel=((cnt>>1)&1);
	sel=((cnt>>2)&1)>0?!sel:sel;
	sel=sel&&(cnt&1);
	swing=((((int32_t)(-param_swing*0.999)<<4)*(cnt&1))+(((cnt>>1)&1)>0?-deviate:deviate)+(sel>0?mash:-mash))*0.99;
}
else if((PHS<=Swing)&&trg){trg=0;Swing=swing;}

      disp_d1=outlet_trigger=trg;
      outlet_pitchbend=FTOM(freq);
      outlet_pitchbase=FTOM(frq)+outlet_pitchbend;
	 outlet_BPMctrl=param_BPMctrl;
	 outlet_count=cnt;
	 outlet_phase=(((phs>>5)/param_phsDiv+((count<<27)/param_phsDiv))*param_phsMul)&vi27;
}
else{
	outlet_pitchbend=FTOM(1);
	outlet_pitchbase=FTOM(1);
	outlet_BPMctrl=0;
	outlet_trigger=0;
	outlet_count=cnt;
}
phs=(uint32_t)Phase;]]></code.krate>
      </object>
   </patchobj>
   <obj type="sss/logic/countExt" uuid="44ed9668-63af-48f8-a018-99db931c5e37" name="countExt_1" x="210" y="0">
      <params>
         <int32 name="max" value="64"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="9e523274-6995-412f-8816-020e48d2654c" name="gateSpreader_2" x="336" y="0">
      <params>
         <bool32.mom name="generate" value="0"/>
         <int32 name="gates" value="64"/>
         <int32 name="qnt" value="2"/>
         <int32 name="start" value="2"/>
         <int32 name="div" value="1"/>
         <frac32.u.map name="p0" value="13.238578796386719"/>
         <frac32.u.map name="p1" value="18.46759033203125"/>
         <frac32.u.map name="p2" value="12.947099685668945"/>
         <frac32.u.map name="p3" value="7.817242622375488"/>
         <frac32.u.map name="p4" value="11.52949047088623"/>
         <frac32.s.map name="swing" value="21.0"/>
         <bool32.tgl name="toggle" value="1"/>
         <frac32.u.map name="random" value="25.0"/>
         <frac32.s.map name="mod" value="25.0"/>
         <int32 name="repeat" value="8"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="9e523274-6995-412f-8816-020e48d2654c">
         <sDescription>This module generates an x-amount of steps within the given max-count (input). Use my &quot;countExt&quot; or &quot;polyCount&quot; module to connect the &quot;max&quot; input/output.
After hitting &quot;generate&quot; it will generate new gates one by one, each time checking which distance between gates is the longest and then randomly divides this distance into 2 gates.

The maximum amount of gates being generated is set by the &quot;gates&quot; selector and their timing can be quantised with the &quot;qnt&quot; selector (powers of 2!).

The amount of gates ACTUALLY TO BE PLAYED depends on the &quot;gates&quot; input which is scaled to the &quot;gates&quot; selector (which just sets the maximum amount of gates to be generated in the array).
When the &quot;gate&quot; input is 0, no gate will be generated.
When &quot;gate&quot; input goes higher, it adds the gates in the order they were created, making smaller and smaller sections by adding gates in the longest &quot;pauzes&quot;. Up to the amount of gates set by the &quot;gate&quot; selector.</sDescription>
         <author>Remco van der Most</author>
         <license>BSD</license>
         <inlets>
            <int32 name="count"/>
            <int32 name="max"/>
            <bool32 name="generate"/>
            <frac32 name="gates"/>
            <int32 name="qnt"/>
         </inlets>
         <outlets>
            <bool32 name="gate"/>
            <int32 name="gates"/>
            <int32 name="number"/>
            <bool32 name="o1"/>
            <bool32 name="o2"/>
            <bool32 name="o3"/>
            <bool32 name="o4"/>
            <bool32 name="o5"/>
            <bool32 name="skipped"/>
         </outlets>
         <displays/>
         <params>
            <bool32.mom name="generate"/>
            <int32 name="gates">
               <MinValue i="1"/>
               <MaxValue i="64"/>
            </int32>
            <int32 name="qnt">
               <MinValue i="0"/>
               <MaxValue i="3"/>
            </int32>
            <int32 name="start">
               <MinValue i="0"/>
               <MaxValue i="8"/>
            </int32>
            <int32 name="div">
               <MinValue i="1"/>
               <MaxValue i="8"/>
            </int32>
            <frac32.u.map name="p0"/>
            <frac32.u.map name="p1"/>
            <frac32.u.map name="p2"/>
            <frac32.u.map name="p3"/>
            <frac32.u.map name="p4"/>
            <frac32.s.map name="swing"/>
            <bool32.tgl name="toggle"/>
            <frac32.u.map.gain name="random"/>
            <frac32.s.map name="mod"/>
            <int32 name="repeat">
               <MinValue i="1"/>
               <MaxValue i="16"/>
            </int32>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[//     number & start/length
int16_t data[64][2];
int i;
int j;
bool gen;
int prv;
bool GEN=1;
int gates;
int number;
int32_t val[5];
int32_t v27=1<<27;
int32_t PRV;
int32_t vi30=(1<<30)-1;]]></code.declaration>
         <code.krate><![CDATA[uint32_t sum;
sum=param_p0+param_p1+param_p2+param_p3+param_p4;
float32_t ratio=(float32_t)v27/sum;
if(!(sum==PRV)){
	ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_p0],param_p0*ratio,0xFFFD);
	ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_p1],param_p1*ratio,0xFFFD);
	ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_p2],param_p2*ratio,0xFFFD);
	ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_p3],param_p3*ratio,0xFFFD);
	ParameterChange(&parent->PExch[PARAM_INDEX_attr_legal_name_p4],param_p4*ratio,0xFFFD);

}
sum=param_p0+param_p1+param_p2+param_p3+param_p4;
int32_t Gat=___SMMUL(gates<<5,inlet_gates<<2);
val[0]=___SMMUL(param_p0<<3,Gat);
val[1]=___SMMUL(param_p1<<3,Gat)+val[0];
val[2]=___SMMUL(param_p2<<3,Gat)+val[1];
val[3]=___SMMUL(param_p3<<3,Gat)+val[2];
val[4]=___SMMUL(param_p4<<3,Gat)+val[3];


if((GEN>0)&&!gen){
	gen=1;
	gates=param_gates;//___SMMUL(param_gates<<3,inlet_gates<<2);
	for(i=0;i<64;i++){
	data[i][0]=0;
	data[i][0]=0;
	}
	data[0][1]=inlet_max;
	for(i=0;i<(gates-1);i++)
	{
		int16_t max=0;
		int pos=0;
		for(j=0;j<(i+1);j++)
		{
			if(data[j][1]>max)
			{
				max=data[j][1];
				pos=j;
			}
		}
		int32_t TMP=(int32_t)(GenerateRandomNumber())&(vi30);
		int32_t swing=((i&1)>(1-param_toggle)?-param_swing:param_swing)+v27<<2;
		int k=i-i/param_repeat*param_repeat;
		swing=(swing+(k*param_mod*8))&vi30;
		TMP=swing+(___SMMUL(param_random,TMP-swing)<<1);
		int16_t tmp=___SMMUL((int32_t)(data[pos][1]-1)<<2,TMP)+1;
		//int16_t tmp=___SMMUL((int32_t)(data[pos][1]-1)<<2,(int32_t)(GenerateRandomNumber()&((1<<30)-1)))+1;
		data[i+1][1]=data[pos][1]-tmp;
		data[i+1][0]=data[pos][0]+tmp;
		data[pos][1]=tmp;
	}
}
else if(GEN==0)
{
	gen=0;
}

outlet_gate=0;
outlet_o1=0;
outlet_o2=0;
outlet_o3=0;
outlet_o4=0;
outlet_o5=0;
outlet_skipped=0;
if(!(inlet_count==prv))
{
	for(i=0;i<___SMMUL(gates<<3,inlet_gates<<2);i++)
	{
		int qnt=__USAT(param_start-i/param_div,8)+param_qnt+inlet_qnt;
		int pos=(data[i][0]>>qnt)<<qnt;
		if(inlet_count==pos)
		{
			outlet_gate=1;
			number=i;
			if(i<val[0]){
				outlet_o1=1;
			}
			else if(i<val[1]){
				outlet_o2=1;
			}
			else if(i<val[2]){
				outlet_o3=1;
			}
			else if(i<val[3]){
				outlet_o4=1;
			}
			else if(i<val[4]){
				outlet_o5=1;
			}
		}
	}
	if(outlet_gate==0){
		outlet_skipped=1;
	}
}
prv=inlet_count;
outlet_number=number;
outlet_gates=gates;
GEN=param_generate+inlet_generate;]]></code.krate>
      </object>
   </patchobj>
   <obj type="sss/logic/countExt" uuid="44ed9668-63af-48f8-a018-99db931c5e37" name="countExt_4" x="462" y="0">
      <params>
         <int32 name="max" value="384"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="f9352b37-3e9f-4e05-a5f3-325596f28141" name="clock_2" x="588" y="0">
      <params/>
      <attribs>
         <combo attributeName="device" selection="din"/>
      </attribs>
      <object id="patch/object" uuid="f9352b37-3e9f-4e05-a5f3-325596f28141">
         <sDescription>Midi clock master, als outputs Midi clock, start, stop, and continue messages</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>midi_out.axh</helpPatch>
         <inlets>
            <bool32 name="run" description="Run"/>
            <int32 name="clock"/>
         </inlets>
         <outlets/>
         <displays/>
         <params/>
         <attribs>
            <combo name="device">
               <MenuEntries>
                  <string>din</string>
                  <string>usb host port 1</string>
                  <string>usb host port 2</string>
                  <string>usb host port 3</string>
                  <string>usb host port 4</string>
                  <string>internal port 1</string>
                  <string>internal port 2</string>
                  <string>usb device port 1</string>
               </MenuEntries>
               <CEntries>
                  <string>MIDI_DEVICE_DIN, 1</string>
                  <string>MIDI_DEVICE_USB_HOST, 1</string>
                  <string>MIDI_DEVICE_USB_HOST, 2</string>
                  <string>MIDI_DEVICE_USB_HOST, 3</string>
                  <string>MIDI_DEVICE_USB_HOST, 4</string>
                  <string>MIDI_DEVICE_INTERNAL, 1</string>
                  <string>MIDI_DEVICE_INTERNAL, 2</string>
                  <string>MIDI_DEVICE_USB_DEVICE, 1</string>
               </CEntries>
            </combo>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[bool _active;
int32_t _posfrac;
int32_t _pos24ppq;
bool rstp;]]></code.declaration>
         <code.init><![CDATA[_active = 0;
_posfrac = 0;
_pos24ppq = 0;
rstp = 0;]]></code.init>
         <code.krate><![CDATA[if (inlet_run && !_active) {
  _active = 1;
  if (_pos24ppq)     MidiSend1((midi_device_t) attr_device, MIDI_CONTINUE);
  else     MidiSend1((midi_device_t) attr_device, MIDI_START);
} else if (!inlet_run && _active){
  _active = 0;
  MidiSend1((midi_device_t) attr_device, MIDI_STOP);
}if (_active) {

  if (!(inlet_clock==_posfrac)) {

    MidiSend1((midi_device_t) attr_device,MIDI_TIMING_CLOCK);
  }
}
_posfrac=inlet_clock;]]></code.krate>
      </object>
   </patchobj>
   <obj type="ctrl/i" uuid="a3786816db6ea5bc6ac4193a5cccdb2c83b83496" name="i_1" x="1134" y="42">
      <params>
         <int32 name="value" value="17"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="c032bc75-81e8-43a7-a14a-e4b4b5aad90d" name="uniform_13" x="504" y="98">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="c032bc75-81e8-43a7-a14a-e4b4b5aad90d">
         <sDescription>uniform distributed (white) noise, k-rate generation. Range 0..(n-1)</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <inlets>
            <bool32.rising name="trig" description="trigger"/>
         </inlets>
         <outlets>
            <frac32 name="v"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t val;
int ntrig;]]></code.declaration>
         <code.init><![CDATA[val = 0;
ntrig = 0;]]></code.init>
         <code.krate><![CDATA[outlet_v = 0;
if ((inlet_trig>0) && !ntrig) {
         outlet_v = (int32_t)(GenerateRandomNumber()>>5);
      ntrig=1;
   }
   else if (!(inlet_trig>0)) {ntrig=0;}]]></code.krate>
      </object>
   </patchobj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_11" x="602" y="98">
      <params>
         <int32 name="max" value="9"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_1" x="714" y="98">
      <params>
         <int32 name="max" value="28"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_2" x="798" y="98">
      <params>
         <int32 name="max" value="28"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_3" x="882" y="98">
      <params>
         <int32 name="max" value="28"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_4" x="966" y="98">
      <params>
         <int32 name="max" value="28"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_9" x="1050" y="98">
      <params>
         <int32 name="max" value="25"/>
      </params>
      <attribs/>
   </obj>
   <obj type="harmony/note scale" uuid="d5343a4fea87a3e4f4dae20287226084550ea8d3" name="note_1" x="1134" y="98">
      <params>
         <bin12 name="b12" value="2741"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_1" x="1288" y="98">
      <params/>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_1" x="238" y="140">
      <params>
         <frac32.u.map name="value" value="22.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_12" x="602" y="154">
      <params>
         <int32 name="max" value="9"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_5" x="714" y="154">
      <params>
         <int32 name="max" value="28"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_6" x="798" y="154">
      <params>
         <int32 name="max" value="28"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_7" x="882" y="154">
      <params>
         <int32 name="max" value="28"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_8" x="966" y="154">
      <params>
         <int32 name="max" value="28"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_10" x="1050" y="154">
      <params>
         <int32 name="max" value="25"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="c032bc75-81e8-43a7-a14a-e4b4b5aad90d" name="uniform_14" x="504" y="182">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="c032bc75-81e8-43a7-a14a-e4b4b5aad90d">
         <sDescription>uniform distributed (white) noise, k-rate generation. Range 0..(n-1)</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <inlets>
            <bool32.rising name="trig" description="trigger"/>
         </inlets>
         <outlets>
            <frac32 name="v"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t val;
int ntrig;]]></code.declaration>
         <code.init><![CDATA[val = 0;
ntrig = 0;]]></code.init>
         <code.krate><![CDATA[outlet_v = 0;
if ((inlet_trig>0) && !ntrig) {
         outlet_v = (int32_t)(GenerateRandomNumber()>>5);
      ntrig=1;
   }
   else if (!(inlet_trig>0)) {ntrig=0;}]]></code.krate>
      </object>
   </patchobj>
   <obj type="harmony/note scale" uuid="d5343a4fea87a3e4f4dae20287226084550ea8d3" name="note_2" x="1134" y="196">
      <params>
         <bin12 name="b12" value="2741"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_2" x="1288" y="196">
      <params/>
      <attribs/>
   </obj>
   <obj type="lfo/sine r" uuid="725d481acbefa181fa5d92f414d317c86b77b789" name="sine_1" x="490" y="280">
      <params>
         <frac32.s.map name="pitch" value="18.12999963760376"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/abs" uuid="4ae01ff03753539d9028888689654235fa199936" name="abs_1" x="602" y="280">
      <params/>
      <attribs/>
   </obj>
   <obj type="lfo/sine r" uuid="725d481acbefa181fa5d92f414d317c86b77b789" name="sine_2" x="728" y="280">
      <params>
         <frac32.s.map name="pitch" value="19.519999980926514"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/abs" uuid="4ae01ff03753539d9028888689654235fa199936" name="abs_2" x="826" y="280">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="d6db4055-3a4a-4c03-a925-14eb89c008a8" name="object_1" x="882" y="280">
      <params>
         <frac32.s.map name="base" value="-24.0"/>
         <frac32.s.map name="lp" value="29.0"/>
         <frac32.s.map name="mod" value="64.0"/>
         <frac32.s.map name="damp" value="64.0"/>
         <bool32.tgl name="mode" value="1"/>
         <frac32.s.map name="dmod" value="-10.0"/>
         <frac32.s.map name="fm" value="20.0"/>
         <frac32.s.map name="pm" value="14.0"/>
         <int32 name="Lstrikes" value="2"/>
         <frac32.s.map name="Lrate" value="-24.0"/>
         <int32 name="Lfirst" value="0"/>
         <int32 name="Lskip" value="1"/>
         <int32 name="Lafter" value="1"/>
         <int32 name="Ljump" value="0"/>
         <int32 name="Rstrikes" value="2"/>
         <frac32.s.map name="Rrate" value="-36.0"/>
         <int32 name="Rfirst" value="0"/>
         <int32 name="Rskip" value="1"/>
         <int32 name="Rafter" value="1"/>
         <int32 name="Rjump" value="0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="d6db4055-3a4a-4c03-a925-14eb89c008a8">
         <sDescription>harp like instrument.
Ltrg and Rtrg input trigger strums for left and right &quot;hand&quot;.
The strings being played depend on the settings of &quot;strikes, skip, start, after and jump&quot;</sDescription>
         <author>Remco van der Most</author>
         <license>BSD</license>
         <inlets>
            <frac32 name="key"/>
            <frac32 name="Ltrg"/>
            <frac32.positive name="Lvel"/>
            <int32 name="Lstrikes"/>
            <frac32 name="Lrate"/>
            <int32 name="Lskip"/>
            <int32 name="Lfirst"/>
            <int32 name="Lafter"/>
            <int32 name="Ljump"/>
            <frac32 name="Rtrg"/>
            <frac32.positive name="Rvel"/>
            <int32 name="Rstrikes"/>
            <frac32 name="Rrate"/>
            <int32 name="Rskip"/>
            <int32 name="Rfirst"/>
            <int32 name="Rafter"/>
            <int32 name="Rjump"/>
         </inlets>
         <outlets>
            <frac32buffer name="out"/>
         </outlets>
         <displays/>
         <params>
            <frac32.s.map name="base" description="base pitch/key"/>
            <frac32.s.map name="lp" description="lowpass filterering the produced waveform"/>
            <frac32.s.map name="mod" description="sends the envelope to the cutoff of the lowpass filter"/>
            <frac32.s.map name="damp" description="sets the damping rate of the envelope"/>
            <bool32.tgl name="mode" description="sets the envelope mode (on is longer envelopes)"/>
            <frac32.s.map name="dmod" description="sends pitch to the envelope dampening (eg. higher notes dampen faster)"/>
            <frac32.s.map name="fm" description="uses output waveform to modulate it&apos;s own frequency (pulselike waveforms)"/>
            <frac32.s.map name="pm" description="uses output waveform to modulate it&apos;s own phase (saw-like waveforms)"/>
            <int32 name="Lstrikes" description="amount of strings to be strummed by left &quot;hand&quot;">
               <MinValue i="1"/>
               <MaxValue i="32"/>
            </int32>
            <frac32.s.map name="Lrate" description="rate of strum"/>
            <int32 name="Lfirst" description="first note of strum">
               <MinValue i="0"/>
               <MaxValue i="28"/>
            </int32>
            <int32 name="Lskip" description="skip notes in the strum">
               <MinValue i="1"/>
               <MaxValue i="28"/>
            </int32>
            <int32 name="Lafter" description="jumps to another string after this amount of notes being strummed">
               <MinValue i="1"/>
               <MaxValue i="32"/>
            </int32>
            <int32 name="Ljump" description="sets jump size">
               <MinValue i="0"/>
               <MaxValue i="28"/>
            </int32>
            <int32 name="Rstrikes">
               <MinValue i="1"/>
               <MaxValue i="32"/>
            </int32>
            <frac32.s.map name="Rrate"/>
            <int32 name="Rfirst">
               <MinValue i="0"/>
               <MaxValue i="28"/>
            </int32>
            <int32 name="Rskip">
               <MinValue i="1"/>
               <MaxValue i="28"/>
            </int32>
            <int32 name="Rafter">
               <MinValue i="1"/>
               <MaxValue i="32"/>
            </int32>
            <int32 name="Rjump">
               <MinValue i="0"/>
               <MaxValue i="28"/>
            </int32>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t p[29];
int32_t env[29];
int32_t hp[29];
int32_t lp[29];
int32_t nt[7]={0,2,4,5,7,9,11};
int32_t w[29];
uint32_t dmp[29];
int32_t damp[29];
int32_t detune[29];
int i;
bool Ltrg;
bool Rtrg;
uint32_t v27=1<<27;
int Lcnt;
int Rcnt;
int32_t frq[29];
int32_t fm[29];
int32_t Llfo;
int32_t Lntrg;
int32_t Rlfo;
int32_t Rntrg;
int32_t A[29];]]></code.declaration>
         <code.init><![CDATA[for(i=0;i<29;i++){
	A[i]=(v27<<4)-(1<<24)*i;
	detune[i]=(int32_t)GenerateRandomNumber()>>16;
}]]></code.init>
         <code.krate><![CDATA[int32_t Lrate;
MTOFEXTENDED(param_Lrate+inlet_Lrate,Lrate)
if((inlet_Ltrg>0)&&!Ltrg){
Ltrg=1;
Lcnt=-1;
}
else if(inlet_Ltrg==0){Ltrg=0;}

if(Lcnt<(param_Lstrikes+inlet_Lstrikes)-1){
Llfo+=Lrate;
if((Llfo>0)&&!Lntrg){
	Lntrg=1;
	Lcnt+=1;
	int32_t tp=Lcnt*(param_Lskip+inlet_Lskip)+(param_Lfirst+inlet_Lfirst)+Lcnt*(Lcnt/(inlet_Lafter+param_Lafter))*(inlet_Ljump+param_Ljump);
	tp=tp-tp/29*29;
	env[tp]=inlet_Lvel;
	p[tp]=0;
}
else if(Llfo<0){Lntrg=0;}
}

int32_t Rrate;
MTOFEXTENDED(param_Rrate+inlet_Rrate,Rrate)
if((inlet_Rtrg>0)&&!Rtrg){
Rtrg=1;
Rcnt=-1;
}
else if(inlet_Rtrg==0){Rtrg=0;}

if(Rcnt<(param_Rstrikes+inlet_Rstrikes)-1){
Rlfo+=Rrate;
if((Rlfo>0)&&!Rntrg){
	Rntrg=1;
	Rcnt+=1;
	int32_t tp=Rcnt*(param_Rskip+inlet_Rskip)+(param_Rfirst+inlet_Rfirst)+Rcnt*(Rcnt/(inlet_Rafter+param_Rafter))*(inlet_Rjump+param_Rjump);
	tp=tp-tp/29*29;
	env[tp]=inlet_Rvel;
	p[tp]=0;
}
else if(Rlfo<0){Rntrg=0;}
}





for(i=0;i<29;i++){
int k=i/7;
int l=i-k*7;
MTOFEXTENDED(param_base+inlet_key+(nt[l]+(12*k)<<21)+detune[i],frq[i])
fm[i]=___SMMUL(frq[i],param_fm)<<5;
fm[i]=i&1?fm[i]:-fm[i];
MTOF(param_lp+(___SMMUL(env[i],param_mod)<<5),dmp[i]);
MTOF(-param_damp-(i*param_dmod>>4),damp[i])
damp[i]=damp[i]>>4;
}]]></code.krate>
         <code.srate><![CDATA[outlet_out=0;
for(i=0;i<29;i++){
	if(param_mode>0){
	env[i]-=___SMMUL(damp[i],___SMMUL(env[i],env[i])<<5);
	}
	else{
	env[i]-=___SMMUL(damp[i],env[i]);
	}
	p[i]+=frq[i]+(___SMMUL(w[i],fm[i])<<8);
	SINE2TINTERP(p[i]+(___SMMUL(w[i],param_pm)<<10),w[i])
	w[i]=___SMMUL(env[i],w[i]);
	hp[i]+=w[i]-hp[i]>>7;
	w[i]-=hp[i];

	outlet_out+=___SMMUL(w[i],A[i])>>1;
	lp[i]+=___SMMUL((w[i])-lp[i],dmp[i])<<1;
	w[i]=lp[i];
}]]></code.srate>
      </object>
   </patchobj>
   <obj type="sss/fx/pcf" uuid="71ab7926-8775-4633-8f74-2069df2a8012" name="pcf_1" x="1008" y="280">
      <params>
         <frac32.s.map name="rate" value="16.0"/>
         <frac32.s.map name="spread" value="24.0"/>
         <frac32.s.map name="depth" value="37.0"/>
         <frac32.s.map name="phase" value="61.0"/>
         <int32 name="mod" value="7"/>
         <frac32.s.map name="MW" value="50.0"/>
         <frac32.s.map name="pan" value="59.0"/>
         <frac32.s.map name="feed" value="-49.0"/>
         <frac32.s.map name="wet" value="41.0"/>
      </params>
      <attribs>
         <combo attributeName="size" selection="32768 (682ms)"/>
         <spinner attributeName="stages" value="2"/>
      </attribs>
   </obj>
   <obj type="sss/gain/vcaST" uuid="82f6d1d8-7fb6-413a-994e-96fdf4b98ee7" name="vcaST_1" x="1204" y="294">
      <params/>
      <attribs/>
   </obj>
   <obj type="sss/audio/StOutVol" uuid="0ca9cf1e-1ce3-469c-80da-a4a885c21246" name="StOutVol_1" x="1316" y="294">
      <params>
         <frac32.u.map name="volume" value="57.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_1" x="126" y="1078">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PC0 (ADC1_IN10)"/>
      </attribs>
   </obj>
   <obj type="kfilter/lowpass" uuid="4f0d68b39b6f6b1c1d371b028d84391d14062d68" name="lowpass_8" x="1260" y="1092">
      <params>
         <frac32.s.map name="freq" value="0.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gpio/out/pwm t3" uuid="48d869d4-5d1e-4024-acf9-ac975c417216" name="pwm_1" x="616" y="1176">
      <params/>
      <attribs/>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_2" x="742" y="1176">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PC1 (ADC1_IN11)"/>
      </attribs>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_3" x="140" y="1260">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PA4 (ADC1_IN4)"/>
      </attribs>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_6" x="742" y="1260">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PA5 (ADC1_IN5)"/>
      </attribs>
   </obj>
   <obj type="tiar/disp/scope" uuid="0991142e-58fa-47e6-9f89-32da05f9fe41" name="scope_1" x="1064" y="1288">
      <params/>
      <attribs/>
   </obj>
   <obj type="tiar/string/remind4" uuid="198cb9de-7b6b-4c8e-87ee-760eec6b6e2f" name="remind4_1" x="1330" y="1302">
      <params/>
      <attribs>
         <table attributeName="prefix0" table="BPM"/>
         <table attributeName="prefix1" table=""/>
         <table attributeName="prefix2" table=""/>
         <table attributeName="prefix3" table=""/>
      </attribs>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_4" x="140" y="1316">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PC4 (ADC1_IN14)"/>
      </attribs>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_5" x="266" y="1316">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PA0 (ADC1_IN0)"/>
      </attribs>
   </obj>
   <obj type="tiar/HW/OLED128x64" uuid="5bde8c3d-fe37-40b3-848e-edb192767bc8" name="OLED128x64_1" x="574" y="1316">
      <params/>
      <attribs>
         <objref attributeName="scope" obj="scope_1"/>
         <combo attributeName="type" selection="SH1106"/>
         <combo attributeName="I2CADDR" selection="0x3C"/>
      </attribs>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_7" x="728" y="1316">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PC2 (ADC1_IN12)"/>
      </attribs>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_8" x="854" y="1316">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PC3 (ADC1_IN13)"/>
      </attribs>
   </obj>
   <obj type="gpio/in/digital" uuid="f59f139e8da912742832dc541157f20f30b7ac1b" name="digital_8" x="770" y="1386">
      <params/>
      <attribs>
         <combo attributeName="pad" selection="PB7"/>
         <combo attributeName="mode" selection="pullup"/>
      </attribs>
   </obj>
   <obj type="gav/rot_enc/Rotary Encoder" uuid="1627ffc4-4107-40fe-88a3-e30099c3f875" name="Rotary_1" x="532" y="1498">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/*" uuid="6a31299e3a491edd8c4df0e809a519a35cc08a3b" name="*_1" x="868" y="1498">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/+" uuid="b94a9b8e9adcb7d18868c0ee808a9b211b65578d" name="+_3" x="924" y="1498">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/c 8" uuid="24e93e811862bc56c09c527e7483dfcaf942a79f" name="c_2" x="784" y="1512">
      <params/>
      <attribs/>
   </obj>
   <obj type="string/c" uuid="4aa90a90c435a742ddfa152d232883fc5b2f1b3" name="c_130" x="196" y="1526">
      <params/>
      <attribs>
         <table attributeName="str" table="press E2"/>
      </attribs>
   </obj>
   <obj type="gav/rot_enc/Rot Enc Selector" uuid="e2ecdcbd-7148-4002-9ddc-d0008f40966d" name="Rot_1" x="532" y="1554">
      <params>
         <int32 name="max" value="3"/>
         <int32 name="preset" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="mux/mux 2" uuid="777491e645978e331fcbab6610f52c1aaa5ade0e" name="mux_1" x="350" y="1568">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/toggle" uuid="f42f0d3aab552c17bc78b9e65f85dc24f977503d" name="toggle_2" x="1064" y="1568">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/inv" uuid="2bd44b865d3b63ff9b80862242bf5be779e3ad5" name="inv_2" x="1148" y="1568">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/inv" uuid="2bd44b865d3b63ff9b80862242bf5be779e3ad5" name="inv_1" x="1204" y="1568">
      <params/>
      <attribs/>
   </obj>
   <obj type="rbrt/control/click hold" uuid="18efd892-468b-4395-a455-47ea981ad016" name="click_1" x="1330" y="1568">
      <params/>
      <attribs>
         <spinner attributeName="short" value="600"/>
         <spinner attributeName="long" value="3000"/>
         <spinner attributeName="cancel" value="7000"/>
      </attribs>
   </obj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_2" x="1470" y="1568">
      <params/>
      <attribs/>
   </obj>
   <obj type="patch/load" uuid="634bf1f8c313920d7f19fc402ba937fd1ee27802" name="load_1" x="1596" y="1568">
      <params/>
      <attribs>
         <table attributeName="filename" table="../start.bin"/>
      </attribs>
   </obj>
   <obj type="string/c" uuid="4aa90a90c435a742ddfa152d232883fc5b2f1b3" name="c_131" x="196" y="1596">
      <params/>
      <attribs>
         <table attributeName="str" table="for more "/>
      </attribs>
   </obj>
   <obj type="gpio/in/digital" uuid="f59f139e8da912742832dc541157f20f30b7ac1b" name="digital_5" x="434" y="1596">
      <params/>
      <attribs>
         <combo attributeName="pad" selection="PB1"/>
         <combo attributeName="mode" selection="pullup"/>
      </attribs>
   </obj>
   <obj type="disp/ibar 16" uuid="302bfed4cde8894229679ce81f6b8a5c5212dd98" name="ibar_5" x="714" y="1610">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="i_4" x="938" y="1610">
      <params/>
      <attribs/>
   </obj>
   <obj type="mux/mux 3" uuid="b371527101f081f3715997908b7ae6f90840faad" name="mux_2" x="350" y="1638">
      <params/>
      <attribs/>
   </obj>
   <obj type="gpio/in/digital" uuid="f59f139e8da912742832dc541157f20f30b7ac1b" name="digital_4" x="434" y="1652">
      <params/>
      <attribs>
         <combo attributeName="pad" selection="PB0"/>
         <combo attributeName="mode" selection="pullup"/>
      </attribs>
   </obj>
   <obj type="string/c" uuid="4aa90a90c435a742ddfa152d232883fc5b2f1b3" name="c_132" x="196" y="1666">
      <params/>
      <attribs>
         <table attributeName="str" table="than 3s"/>
      </attribs>
   </obj>
   <obj type="gav/rot_enc/Rot Enc Value" uuid="b57a141f-d322-4abb-ae37-d19978d56523" name="Rot_10" x="616" y="1680">
      <params>
         <int32 name="value" value="0"/>
         <int32 name="min" value="0"/>
         <int32 name="max" value="900"/>
         <int32 name="preset" value="180"/>
      </params>
      <attribs/>
   </obj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="i_2" x="784" y="1680">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_2" x="826" y="1680">
      <params/>
      <attribs/>
   </obj>
   <obj type="gav/rot_enc/Rot Enc Value" uuid="b57a141f-d322-4abb-ae37-d19978d56523" name="Rot_2" x="896" y="1680">
      <params>
         <int32 name="value" value="0"/>
         <int32 name="min" value="0"/>
         <int32 name="max" value="100"/>
         <int32 name="preset" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="i_8" x="1036" y="1680">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_5" x="1078" y="1680">
      <params/>
      <attribs/>
   </obj>
   <obj type="gav/rot_enc/Rot Enc Value" uuid="b57a141f-d322-4abb-ae37-d19978d56523" name="Rot_6" x="1218" y="1680">
      <params>
         <int32 name="value" value="4"/>
         <int32 name="min" value="0"/>
         <int32 name="max" value="127"/>
         <int32 name="preset" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="i_9" x="1358" y="1680">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_9" x="1400" y="1680">
      <params/>
      <attribs/>
   </obj>
   <obj type="gav/rot_enc/Rot Enc Value" uuid="b57a141f-d322-4abb-ae37-d19978d56523" name="Rot_7" x="1470" y="1680">
      <params>
         <int32 name="value" value="5"/>
         <int32 name="min" value="0"/>
         <int32 name="max" value="127"/>
         <int32 name="preset" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="i_10" x="1610" y="1680">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_10" x="1652" y="1680">
      <params/>
      <attribs/>
   </obj>
   <obj type="string/c" uuid="4aa90a90c435a742ddfa152d232883fc5b2f1b3" name="c_133" x="196" y="1736">
      <params/>
      <attribs>
         <table attributeName="str" table="than 2s"/>
      </attribs>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_1" x="784" y="1736">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_6" x="1036" y="1736">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_11" x="1358" y="1736">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_12" x="1610" y="1736">
      <params/>
      <attribs/>
   </obj>
   <obj type="gpio/in/digital" uuid="f59f139e8da912742832dc541157f20f30b7ac1b" name="digital_6" x="434" y="1750">
      <params/>
      <attribs>
         <combo attributeName="pad" selection="PA1"/>
         <combo attributeName="mode" selection="pullup"/>
      </attribs>
   </obj>
   <obj type="string/c" uuid="4aa90a90c435a742ddfa152d232883fc5b2f1b3" name="c_134" x="196" y="1806">
      <params/>
      <attribs>
         <table attributeName="str" table="than 1s"/>
      </attribs>
   </obj>
   <obj type="gpio/in/digital" uuid="f59f139e8da912742832dc541157f20f30b7ac1b" name="digital_1" x="434" y="1848">
      <params/>
      <attribs>
         <combo attributeName="pad" selection="PA2"/>
         <combo attributeName="mode" selection="pullup"/>
      </attribs>
   </obj>
   <obj type="gav/rot_enc/Rot Enc Value" uuid="b57a141f-d322-4abb-ae37-d19978d56523" name="Rot_3" x="644" y="1848">
      <params>
         <int32 name="value" value="2"/>
         <int32 name="min" value="0"/>
         <int32 name="max" value="127"/>
         <int32 name="preset" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="i_3" x="784" y="1848">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_3" x="826" y="1848">
      <params/>
      <attribs/>
   </obj>
   <obj type="gav/rot_enc/Rot Enc Value" uuid="b57a141f-d322-4abb-ae37-d19978d56523" name="Rot_5" x="896" y="1848">
      <params>
         <int32 name="value" value="3"/>
         <int32 name="min" value="0"/>
         <int32 name="max" value="127"/>
         <int32 name="preset" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="i_11" x="1036" y="1848">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_7" x="1078" y="1848">
      <params/>
      <attribs/>
   </obj>
   <obj type="gav/rot_enc/Rot Enc Value" uuid="b57a141f-d322-4abb-ae37-d19978d56523" name="Rot_8" x="1218" y="1848">
      <params>
         <int32 name="value" value="6"/>
         <int32 name="min" value="0"/>
         <int32 name="max" value="127"/>
         <int32 name="preset" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="i_12" x="1358" y="1848">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_13" x="1400" y="1848">
      <params/>
      <attribs/>
   </obj>
   <obj type="gav/rot_enc/Rot Enc Value" uuid="b57a141f-d322-4abb-ae37-d19978d56523" name="Rot_9" x="1470" y="1848">
      <params>
         <int32 name="value" value="7"/>
         <int32 name="min" value="0"/>
         <int32 name="max" value="127"/>
         <int32 name="preset" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="i_13" x="1610" y="1848">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_14" x="1652" y="1848">
      <params/>
      <attribs/>
   </obj>
   <obj type="string/c" uuid="4aa90a90c435a742ddfa152d232883fc5b2f1b3" name="c_1" x="196" y="1876">
      <params/>
      <attribs>
         <table attributeName="str" table="to quit"/>
      </attribs>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_4" x="784" y="1904">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_8" x="1036" y="1904">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_15" x="1358" y="1904">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_16" x="1610" y="1904">
      <params/>
      <attribs/>
   </obj>
   <obj type="gpio/in/digital" uuid="f59f139e8da912742832dc541157f20f30b7ac1b" name="digital_2" x="434" y="1918">
      <params/>
      <attribs>
         <combo attributeName="pad" selection="PA3"/>
         <combo attributeName="mode" selection="pullup"/>
      </attribs>
   </obj>
   <obj type="gpio/in/digital" uuid="f59f139e8da912742832dc541157f20f30b7ac1b" name="digital_3" x="434" y="1988">
      <params/>
      <attribs>
         <combo attributeName="pad" selection="PC5"/>
         <combo attributeName="mode" selection="pullup"/>
      </attribs>
   </obj>
   <nets>
      <net>
         <source obj="gateSpreader_2" outlet="o1"/>
         <dest obj="uniform_2" inlet="trig"/>
         <dest obj="uniform_3" inlet="trig"/>
         <dest obj="uniform_9" inlet="trig"/>
         <dest obj="uniform_11" inlet="trig"/>
         <dest obj="uniform_13" inlet="trig"/>
      </net>
      <net>
         <source obj="uniform_1" outlet="v"/>
         <dest obj="object_1" inlet="Lskip"/>
      </net>
      <net>
         <source obj="uniform_2" outlet="v"/>
         <dest obj="object_1" inlet="Lfirst"/>
      </net>
      <net>
         <source obj="uniform_3" outlet="v"/>
         <dest obj="object_1" inlet="Lafter"/>
      </net>
      <net>
         <source obj="uniform_4" outlet="v"/>
         <dest obj="object_1" inlet="Ljump"/>
      </net>
      <net>
         <source obj="countExt_1" outlet="o"/>
         <dest obj="gateSpreader_2" inlet="count"/>
      </net>
      <net>
         <source obj="countExt_1" outlet="max"/>
         <dest obj="gateSpreader_2" inlet="max"/>
      </net>
      <net>
         <source obj="gateSpreader_2" outlet="o2"/>
         <dest obj="uniform_6" inlet="trig"/>
         <dest obj="uniform_7" inlet="trig"/>
         <dest obj="uniform_10" inlet="trig"/>
         <dest obj="uniform_12" inlet="trig"/>
         <dest obj="uniform_14" inlet="trig"/>
      </net>
      <net>
         <source obj="uniform_6" outlet="v"/>
         <dest obj="object_1" inlet="Rfirst"/>
      </net>
      <net>
         <source obj="uniform_5" outlet="v"/>
         <dest obj="object_1" inlet="Rskip"/>
      </net>
      <net>
         <source obj="uniform_7" outlet="v"/>
         <dest obj="object_1" inlet="Rafter"/>
      </net>
      <net>
         <source obj="uniform_8" outlet="v"/>
         <dest obj="object_1" inlet="Rjump"/>
      </net>
      <net>
         <source obj="dial_1" outlet="out"/>
         <dest obj="gateSpreader_2" inlet="gates"/>
      </net>
      <net>
         <source obj="uniform_9" outlet="v"/>
         <dest obj="note_1" inlet="note"/>
      </net>
      <net>
         <source obj="note_1" outlet="note"/>
         <dest obj="+_1" inlet="in1"/>
      </net>
      <net>
         <source obj="uniform_10" outlet="v"/>
         <dest obj="note_2" inlet="note"/>
      </net>
      <net>
         <source obj="note_2" outlet="note"/>
         <dest obj="+_2" inlet="in1"/>
      </net>
      <net>
         <source obj="i_1" outlet="out"/>
         <dest obj="note_1" inlet="offset"/>
         <dest obj="note_2" inlet="offset"/>
      </net>
      <net>
         <source obj="uniform_11" outlet="v"/>
         <dest obj="object_1" inlet="Lstrikes"/>
      </net>
      <net>
         <source obj="uniform_12" outlet="v"/>
         <dest obj="object_1" inlet="Rstrikes"/>
      </net>
      <net>
         <source obj="object_1" outlet="out"/>
         <dest obj="pcf_1" inlet="in"/>
      </net>
      <net>
         <source obj="pcf_1" outlet="outR"/>
         <dest obj="vcaST_1" inlet="a2"/>
      </net>
      <net>
         <source obj="gateSpreader_2" outlet="o3"/>
         <dest obj="uniform_1" inlet="trig"/>
      </net>
      <net>
         <source obj="gateSpreader_2" outlet="o4"/>
         <dest obj="uniform_5" inlet="trig"/>
         <dest obj="uniform_4" inlet="trig"/>
      </net>
      <net>
         <source obj="gateSpreader_2" outlet="o5"/>
         <dest obj="uniform_8" inlet="trig"/>
      </net>
      <net>
         <source obj="uniform_13" outlet="v"/>
         <dest obj="object_1" inlet="Ltrg"/>
      </net>
      <net>
         <source obj="uniform_14" outlet="v"/>
         <dest obj="object_1" inlet="Rtrg"/>
      </net>
      <net>
         <source obj="sine_1" outlet="wave"/>
         <dest obj="abs_1" inlet="in"/>
      </net>
      <net>
         <source obj="sine_2" outlet="wave"/>
         <dest obj="abs_2" inlet="in"/>
      </net>
      <net>
         <source obj="abs_1" outlet="out"/>
         <dest obj="object_1" inlet="Lvel"/>
      </net>
      <net>
         <source obj="abs_2" outlet="out"/>
         <dest obj="object_1" inlet="Rvel"/>
      </net>
      <net>
         <source obj="object_2" outlet="trigger"/>
         <dest obj="countExt_1" inlet="trig"/>
         <dest obj="countExt_4" inlet="trig"/>
      </net>
      <net>
         <source obj="countExt_4" outlet="o"/>
         <dest obj="clock_2" inlet="clock"/>
      </net>
      <net>
         <source obj="toggle_1" outlet="o"/>
         <dest obj="countExt_4" inlet="r"/>
         <dest obj="clock_2" inlet="run"/>
         <dest obj="object_2" inlet="reset"/>
      </net>
      <net>
         <source obj="object_2" outlet="rst"/>
         <dest obj="countExt_1" inlet="r"/>
      </net>
      <net>
         <source obj="+_1" outlet="out"/>
         <dest obj="object_1" inlet="Lrate"/>
      </net>
      <net>
         <source obj="+_2" outlet="out"/>
         <dest obj="object_1" inlet="Rrate"/>
      </net>
      <net>
         <source obj="object_2" outlet="pitchbase"/>
         <dest obj="+_1" inlet="in2"/>
         <dest obj="+_2" inlet="in2"/>
      </net>
      <net>
         <source obj="countExt_1" outlet="c"/>
         <dest obj="gateSpreader_2" inlet="generate"/>
      </net>
      <net>
         <source obj="object_2" outlet="pitchbend"/>
         <dest obj="object_1" inlet="key"/>
      </net>
      <net>
         <source obj="analog_2" outlet="out"/>
         <dest obj="lowpass_8" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_1" outlet="o"/>
         <dest obj="ibar_5" inlet="in"/>
         <dest obj="i_4" inlet="in"/>
         <dest obj="Rot_3" inlet="value"/>
         <dest obj="Rot_5" inlet="value"/>
         <dest obj="Rot_6" inlet="value"/>
         <dest obj="Rot_7" inlet="value"/>
         <dest obj="Rot_8" inlet="value"/>
         <dest obj="Rot_9" inlet="value"/>
      </net>
      <net>
         <source obj="digital_5" outlet="out"/>
         <dest obj="Rot_1" inlet="trig"/>
         <dest obj="Rot_10" inlet="trig"/>
         <dest obj="Rotary_1" inlet="trig"/>
      </net>
      <net>
         <source obj="digital_4" outlet="out"/>
         <dest obj="Rot_1" inlet="dir"/>
         <dest obj="Rot_10" inlet="dir"/>
         <dest obj="Rotary_1" inlet="dir"/>
      </net>
      <net>
         <source obj="digital_6" outlet="out"/>
         <dest obj="Rot_1" inlet="mom"/>
         <dest obj="Rot_10" inlet="mom"/>
      </net>
      <net>
         <source obj="digital_1" outlet="out"/>
         <dest obj="Rot_2" inlet="trig"/>
         <dest obj="Rot_3" inlet="trig"/>
         <dest obj="Rot_5" inlet="trig"/>
         <dest obj="Rot_6" inlet="trig"/>
         <dest obj="Rot_8" inlet="trig"/>
         <dest obj="Rot_9" inlet="trig"/>
         <dest obj="Rot_7" inlet="trig"/>
      </net>
      <net>
         <source obj="digital_2" outlet="out"/>
         <dest obj="Rot_2" inlet="dir"/>
         <dest obj="Rot_3" inlet="dir"/>
         <dest obj="Rot_5" inlet="dir"/>
         <dest obj="Rot_9" inlet="dir"/>
         <dest obj="Rot_8" inlet="dir"/>
         <dest obj="Rot_7" inlet="dir"/>
         <dest obj="Rot_6" inlet="dir"/>
      </net>
      <net>
         <source obj="digital_3" outlet="out"/>
         <dest obj="Rot_2" inlet="mom"/>
         <dest obj="Rot_3" inlet="mom"/>
         <dest obj="Rot_5" inlet="mom"/>
         <dest obj="Rot_8" inlet="mom"/>
         <dest obj="Rot_9" inlet="mom"/>
         <dest obj="Rot_6" inlet="mom"/>
         <dest obj="Rot_7" inlet="mom"/>
         <dest obj="inv_1" inlet="i"/>
      </net>
      <net>
         <source obj="Rot_3" outlet="o"/>
         <dest obj="i_3" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_3" outlet="b"/>
         <dest obj="bool_3" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_3" outlet="a"/>
         <dest obj="bool_4" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_5" outlet="o"/>
         <dest obj="i_11" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_5" outlet="b"/>
         <dest obj="bool_7" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_5" outlet="a"/>
         <dest obj="bool_8" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_6" outlet="o"/>
         <dest obj="i_9" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_6" outlet="b"/>
         <dest obj="bool_9" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_6" outlet="a"/>
         <dest obj="bool_11" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_8" outlet="o"/>
         <dest obj="i_12" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_8" outlet="b"/>
         <dest obj="bool_13" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_8" outlet="a"/>
         <dest obj="bool_15" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_7" outlet="o"/>
         <dest obj="i_10" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_7" outlet="b"/>
         <dest obj="bool_10" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_7" outlet="a"/>
         <dest obj="bool_12" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_9" outlet="o"/>
         <dest obj="i_13" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_9" outlet="b"/>
         <dest obj="bool_14" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_9" outlet="a"/>
         <dest obj="bool_16" inlet="in"/>
      </net>
      <net>
         <source obj="toggle_2" outlet="o"/>
         <dest obj="inv_2" inlet="i"/>
         <dest obj="mux_1" inlet="s"/>
         <dest obj="OLED128x64_1" inlet="mode"/>
      </net>
      <net>
         <source obj="click_1" outlet="long"/>
         <dest obj="and_2" inlet="i1"/>
      </net>
      <net>
         <source obj="and_2" outlet="o"/>
         <dest obj="load_1" inlet="trig"/>
      </net>
      <net>
         <source obj="inv_1" outlet="o"/>
         <dest obj="click_1" inlet="gate"/>
      </net>
      <net>
         <source obj="c_130" outlet="out"/>
         <dest obj="mux_1" inlet="i1"/>
      </net>
      <net>
         <source obj="Rot_1" outlet="b"/>
         <dest obj="toggle_2" inlet="trig"/>
      </net>
      <net>
         <source obj="inv_2" outlet="o"/>
         <dest obj="and_2" inlet="i2"/>
      </net>
      <net>
         <source obj="click_1" outlet="stage"/>
         <dest obj="mux_2" inlet="s"/>
      </net>
      <net>
         <source obj="c_132" outlet="out"/>
         <dest obj="mux_2" inlet="i0"/>
      </net>
      <net>
         <source obj="c_133" outlet="out"/>
         <dest obj="mux_2" inlet="i1"/>
      </net>
      <net>
         <source obj="c_134" outlet="out"/>
         <dest obj="mux_2" inlet="i2"/>
      </net>
      <net>
         <source obj="c_1" outlet="out"/>
         <dest obj="OLED128x64_1" inlet="line4"/>
      </net>
      <net>
         <source obj="mux_2" outlet="o"/>
         <dest obj="OLED128x64_1" inlet="line3"/>
      </net>
      <net>
         <source obj="mux_1" outlet="o"/>
         <dest obj="OLED128x64_1" inlet="line1"/>
      </net>
      <net>
         <source obj="c_131" outlet="out"/>
         <dest obj="OLED128x64_1" inlet="line2"/>
      </net>
      <net>
         <source obj="remind4_1" outlet="out"/>
         <dest obj="mux_1" inlet="i2"/>
      </net>
      <net>
         <source obj="Rot_10" outlet="b"/>
         <dest obj="bool_2" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_10" outlet="a"/>
         <dest obj="bool_1" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_2" outlet="a"/>
         <dest obj="bool_6" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_2" outlet="b"/>
         <dest obj="bool_5" inlet="in"/>
      </net>
      <net>
         <source obj="Rot_2" outlet="o"/>
         <dest obj="*_1" inlet="a"/>
      </net>
      <net>
         <source obj="c_2" outlet="o"/>
         <dest obj="*_1" inlet="b"/>
      </net>
      <net>
         <source obj="*_1" outlet="result"/>
         <dest obj="+_3" inlet="in2"/>
      </net>
      <net>
         <source obj="Rotary_1" outlet="o"/>
         <dest obj="+_3" inlet="in1"/>
      </net>
      <net>
         <source obj="+_3" outlet="out"/>
         <dest obj="object_2" inlet="BPMbase"/>
         <dest obj="remind4_1" inlet="i0"/>
         <dest obj="i_2" inlet="in"/>
      </net>
      <net>
         <source obj="vcaST_1" outlet="o1"/>
         <dest obj="StOutVol_1" inlet="left"/>
      </net>
      <net>
         <source obj="vcaST_1" outlet="o2"/>
         <dest obj="StOutVol_1" inlet="right"/>
         <dest obj="scope_1" inlet="in"/>
      </net>
      <net>
         <source obj="pcf_1" outlet="outL"/>
         <dest obj="vcaST_1" inlet="a1"/>
      </net>
      <net>
         <source obj="lowpass_8" outlet="out"/>
         <dest obj="vcaST_1" inlet="v"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>331</x>
      <y>186</y>
      <width>1846</width>
      <height>1197</height>
   </windowPos>
</patch-1.0>